buildscript {
   repositories {
      mavenLocal()
      jcenter()
      maven {
         url "https://plugins.gradle.org/m2/"
      }
      maven {
         url "http://dl.bintray.com/ihmcrobotics/maven-release"
      }
   }

   dependencies {
      classpath 'org.ajoberstar:gradle-git:1.4.0-rc.1'
      classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3"
      classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.4.18"
      classpath "us.ihmc.gradle:ihmc-build:0.0.23"
   }
}

import org.ajoberstar.grgit.*

allprojects {
   apply plugin: 'java'
   apply plugin: 'eclipse'
   apply plugin: 'idea'
   apply plugin: 'maven-publish'
   apply plugin: "com.jfrog.bintray"
   apply plugin: "com.jfrog.artifactory"
   apply plugin: 'us.ihmc.gradle.ihmc-build'
}

Project rootProject = project;
project.ext.repo = Grgit.open(projectDir)

version = '0.10.0'

if (publishMode.startsWith("SNAPSHOT"))
{
   version = ihmc.getSnapshotVersion(version, bambooBuildNumber)
} else if (publishMode.startsWith("NIGHTLY"))
{
   version = ihmc.getNightlyVersion(version)
} else if (publishMode.startsWith("STABLE"))
{
   if (!project.ext.repo.branch.current.name.equals("master"))
   {
      throw new GradleException("Cannot make STABLE build from branch \"${project.ext.repo.branch.current.name}\", it is not the branch used for stable releases!")
   }
}

project.ext.fullVersion = version
project.ext.vcsUrl = "https://github.com/ihmcrobotics/ihmc-open-robotics-software"

subprojects {
   sourceCompatibility = 1.8
   targetCompatibility = 1.8

   version = rootProject.version
   project.ext.fullVersion = rootProject.ext.fullVersion
   project.ext.vcsUrl = rootProject.ext.vcsUrl
   project.ext.licenseURL = "http://www.apache.org/licenses/LICENSE-2.0.txt"
   project.ext.licenseName = "Apache License, Version 2.0"
   project.ext.companyName = "IHMC"
   project.ext.author = "IHMC Gradle Build Script"
   project.ext.groupId = "us.ihmc"
   project.ext.artifactoryRepo = "libs-snapshot-local"
   project.ext.bintrayRepo = "maven-release"
   project.ext.bintrayOrg = "ihmcrobotics"
   project.ext.bintrayLicenseName = "Apache-2.0"
   project.ext.bintrayDryRun = true

   repositories ihmc.setupCommonArtifactProxies()

   repositories {
      mavenLocal()
      jcenter()
      mavenCentral()
   }

   ihmc.setupAggressiveResolutionStrategy(project)
   ihmc.setupJavaSourceSets(project)

   ihmc.setupCommonJARConfiguration(project)
   ihmc.setupCommonPublishingConfiguration(project)

   ihmc.setupArtifactoryPublishingConfiguration(project)
   ihmc.setupBintrayPublishingConfiguration(project)
}

//   subproject.ext {
//      getOpenRoboticsSoftwareProject = {
//         if (subproject.getParent().name.equals(rootProject.name))
//         {
//            return rootProject
//         } else
//         {
//            return project(':ihmc-open-robotics-software')
//         }
//      }
//
//      getOpenRoboticsSoftwareGradlePath = {
//         if (subproject.getParent().name.equals(rootProject.name))
//         {
//            return ""
//         } else
//         {
//            return ":ihmc-open-robotics-software"
//         }
//      }
//   }

//   jar {
//      from(project.projectDir) {
//         include 'LICENSE*txt'
//      }
//   }

//   task sourceJar(type: Jar) {
//      from sourceSets.main.allJava
//   }

//   publishing {
//      publications {
//         mavenJava(MavenPublication) {
//
//            groupId 'us.ihmc'
//            artifactId "${project.name}"
//            version "${project.ext.fullVersion}"
//
//            from components.java
//
//            artifact sourceJar {
//               classifier "sources"
//            }
//
//            pom.withXml {
//               def licenseNode = asNode().appendNode('licenses').appendNode('license')
//               licenseNode.appendNode('name', project.ext.licenseName)
//               licenseNode.appendNode('url', project.ext.licenseURL)
//            }
//         }
//      }
//   }

task performRelease(type: GradleBuild) {
   if (!publishMode.equals("STABLE"))
   {
      return
   }
   buildFile "build.gradle"
   startParameter gradle.startParameter
   tasks = ["bintrayUpload", ":ihmc-robot-data-logger:publishLoggerDistributionToBintray"]
}

//task publishAllToMavenLocal(type: GradleBuild) {
//   buildFile "build.gradle"
//   def allTasks = new ArrayList<String>()
//
//   subprojects.each { subproject ->
//      allTasks.add(":" + subproject.name + ":publishToMavenLocal")
//   }
//
//   tasks = allTasks
//}
//
//gradle.taskGraph.whenReady { TaskExecutionGraph graph ->
//   if (graph.hasTask(publishAllToMavenLocal))
//   {
//      publishMode = "LOCAL"
//      project.ext.fullVersion = "LOCAL"
//
//      subprojects.each { subproject ->
//         subproject.ext.fullVersion = "LOCAL"
//      }
//   }
//
//   if (graph.hasTask(performRelease))
//   {
//      if (!publishMode.equals("STABLE"))
//      {
//         throw new GradleException("Cannot perform release unless -PpublishMode=STABLE")
//      }
//   }
//}
